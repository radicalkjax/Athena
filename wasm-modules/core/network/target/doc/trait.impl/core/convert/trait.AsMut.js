(function() {
    var implementors = Object.fromEntries([["arrayvec",[["impl&lt;T, const CAP: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"arrayvec/struct.ArrayVec.html\" title=\"struct arrayvec::ArrayVec\">ArrayVec</a>&lt;T, CAP&gt;"]]],["etherparse",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"struct\" href=\"etherparse/struct.Ipv4Options.html\" title=\"struct etherparse::Ipv4Options\">Ipv4Options</a>&gt; for <a class=\"struct\" href=\"etherparse/struct.Ipv4Options.html\" title=\"struct etherparse::Ipv4Options\">Ipv4Options</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"struct\" href=\"etherparse/struct.TcpOptions.html\" title=\"struct etherparse::TcpOptions\">TcpOptions</a>&gt; for <a class=\"struct\" href=\"etherparse/struct.TcpOptions.html\" title=\"struct etherparse::TcpOptions\">TcpOptions</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"etherparse/struct.Ipv4Options.html\" title=\"struct etherparse::Ipv4Options\">Ipv4Options</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"etherparse/struct.TcpOptions.html\" title=\"struct etherparse::TcpOptions\">TcpOptions</a>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[513,1558]}