(function() {
    var type_impls = Object.fromEntries([["etherparse",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IpAuthHeader\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#15\">Source</a><a href=\"#impl-Clone-for-IpAuthHeader\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#15\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","etherparse::net::ip_auth_header::IPv6AuthenticationHeader","etherparse::net::ip_auth_header::IpAuthenticationHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IpAuthHeader\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#34-43\">Source</a><a href=\"#impl-Debug-for-IpAuthHeader\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#35-42\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, formatter: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","etherparse::net::ip_auth_header::IPv6AuthenticationHeader","etherparse::net::ip_auth_header::IpAuthenticationHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IpAuthHeader\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#56-66\">Source</a><a href=\"#impl-Default-for-IpAuthHeader\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#57-65\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","etherparse::net::ip_auth_header::IPv6AuthenticationHeader","etherparse::net::ip_auth_header::IpAuthenticationHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IpAuthHeader\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#68-303\">Source</a><a href=\"#impl-IpAuthHeader\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_LEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#70\">Source</a><h4 class=\"code-header\">pub const <a href=\"etherparse/struct.IpAuthHeader.html#associatedconstant.MIN_LEN\" class=\"constant\">MIN_LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a> = 12usize</h4></section></summary><div class=\"docblock\"><p>Minimum length of an IP authentication header in bytes/octets.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_LEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#78\">Source</a><h4 class=\"code-header\">pub const <a href=\"etherparse/struct.IpAuthHeader.html#associatedconstant.MAX_LEN\" class=\"constant\">MAX_LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a> = 1_028usize</h4></section></summary><div class=\"docblock\"><p>Maximum length of an IP authentication header in bytes/octets.</p>\n<p>This number is calculated by taking the maximum value\nthat the “payload length” field supports (0xff) adding 2 and\nmultiplying the sum by 4 as the “payload length” specifies how\nmany 4 bytes words are present in the header.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_ICV_LEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#82\">Source</a><h4 class=\"code-header\">pub const <a href=\"etherparse/struct.IpAuthHeader.html#associatedconstant.MAX_ICV_LEN\" class=\"constant\">MAX_ICV_LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a> = 1_016usize</h4></section></summary><div class=\"docblock\"><p>The maximum amount of bytes/octets that can be stored in the ICV\npart of an IP authentication header.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#92-114\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.new\" class=\"fn\">new</a>(\n    next_header: <a class=\"struct\" href=\"etherparse/struct.IpNumber.html\" title=\"struct etherparse::IpNumber\">IpNumber</a>,\n    spi: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>,\n    sequence_number: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>,\n    raw_icv: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a>, <a class=\"enum\" href=\"etherparse/err/ip_auth/enum.IcvLenError.html\" title=\"enum etherparse::err::ip_auth::IcvLenError\">IcvLenError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new authentication header with the given parameters.</p>\n<p>Note: The length of the raw_icv slice must be a multiple of 4\nand the maximum allowed length is 1016 bytes\n(<code>IpAuthHeader::MAX_ICV_LEN</code>). If the slice length does\nnot fulfill these requirements the value is not copied and an\n<a href=\"etherparse/err/ip_auth/enum.IcvLenError.html\" title=\"enum etherparse::err::ip_auth::IcvLenError\"><code>crate::err::ip_auth::IcvLenError</code></a> is returned.\nIf successful an Ok(()) is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#117-124\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.from_slice\" class=\"fn\">from_slice</a>(\n    slice: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a>, &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]), <a class=\"enum\" href=\"etherparse/err/ip_auth/enum.HeaderSliceError.html\" title=\"enum etherparse::err::ip_auth::HeaderSliceError\">HeaderSliceError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read an  authentication header from a slice and return the header &amp; unused parts of the slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#129-163\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.read\" class=\"fn\">read</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(\n    reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut T</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a>, <a class=\"enum\" href=\"etherparse/err/ip_auth/enum.HeaderReadError.html\" title=\"enum etherparse::err::ip_auth::HeaderReadError\">HeaderReadError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read an authentication header from the current reader position.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_limited\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#169-217\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.read_limited\" class=\"fn\">read_limited</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(\n    reader: &amp;mut <a class=\"struct\" href=\"etherparse/io/struct.LimitedReader.html\" title=\"struct etherparse::io::LimitedReader\">LimitedReader</a>&lt;T&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a>, <a class=\"enum\" href=\"etherparse/err/ip_auth/enum.HeaderLimitedReadError.html\" title=\"enum etherparse::err::ip_auth::HeaderLimitedReadError\">HeaderLimitedReadError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read an authentication header from the current reader position\nwith a limited reader.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_icv\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#220-222\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.raw_icv\" class=\"fn\">raw_icv</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice the raw icv value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_raw_icv\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#230-241\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.set_raw_icv\" class=\"fn\">set_raw_icv</a>(&amp;mut self, raw_icv: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"etherparse/err/ip_auth/enum.IcvLenError.html\" title=\"enum etherparse::err::ip_auth::IcvLenError\">IcvLenError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Sets the icv value to the given raw value. The length of the slice must be\na multiple of 4 and the maximum allowed length is 1016 bytes\n(<code>IpAuthHeader::MAX_ICV_LEN</code>). If the slice length does\nnot fulfill these requirements the value is not copied and an\n<a href=\"etherparse/err/ip_auth/enum.IcvLenError.html\" title=\"enum etherparse::err::ip_auth::IcvLenError\"><code>crate::err::ip_auth::IcvLenError</code></a> is returned.\nIf successful an Ok(()) is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#246-267\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.write\" class=\"fn\">write</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(&amp;self, writer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Writes the given authentication header to the current position.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header_len\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#270-272\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.header_len\" class=\"fn\">header_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Length of the header in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#275-302\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeader.html#tymethod.to_bytes\" class=\"fn\">to_bytes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"arrayvec/arrayvec/struct.ArrayVec.html\" title=\"struct arrayvec::arrayvec::ArrayVec\">ArrayVec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>, { IpAuthHeader::MAX_LEN }&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the serialized header.</p>\n</div></details></div></details>",0,"etherparse::net::ip_auth_header::IPv6AuthenticationHeader","etherparse::net::ip_auth_header::IpAuthenticationHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-IpAuthHeader\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#45-52\">Source</a><a href=\"#impl-PartialEq-for-IpAuthHeader\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#46-51\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","etherparse::net::ip_auth_header::IPv6AuthenticationHeader","etherparse::net::ip_auth_header::IpAuthenticationHeader"],["<section id=\"impl-Eq-for-IpAuthHeader\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header.rs.html#54\">Source</a><a href=\"#impl-Eq-for-IpAuthHeader\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a></h3></section>","Eq","etherparse::net::ip_auth_header::IPv6AuthenticationHeader","etherparse::net::ip_auth_header::IpAuthenticationHeader"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[21442]}