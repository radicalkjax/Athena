(function() {
    var type_impls = Object.fromEntries([["etherparse",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NetHeaders\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#8\">Source</a><a href=\"#impl-Clone-for-NetHeaders\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#8\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","etherparse::net::net_headers::IpHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NetHeaders\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#8\">Source</a><a href=\"#impl-Debug-for-NetHeaders\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#8\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","etherparse::net::net_headers::IpHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIpHeaders%3E-for-NetHeaders\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#46-54\">Source</a><a href=\"#impl-From%3CIpHeaders%3E-for-NetHeaders\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"etherparse/enum.IpHeaders.html\" title=\"enum etherparse::IpHeaders\">IpHeaders</a>&gt; for <a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#48-53\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"enum\" href=\"etherparse/enum.IpHeaders.html\" title=\"enum etherparse::IpHeaders\">IpHeaders</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IpHeaders>","etherparse::net::net_headers::IpHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetHeaders\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#17-44\">Source</a><a href=\"#impl-NetHeaders\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ipv4_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#19-25\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/enum.NetHeaders.html#tymethod.ipv4_ref\" class=\"fn\">ipv4_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"struct\" href=\"etherparse/struct.Ipv4Header.html\" title=\"struct etherparse::Ipv4Header\">Ipv4Header</a>, &amp;<a class=\"struct\" href=\"etherparse/struct.Ipv4Extensions.html\" title=\"struct etherparse::Ipv4Extensions\">Ipv4Extensions</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns references to the IPv4 header &amp; extensions if the header contains IPv4 values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ipv6_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#28-34\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/enum.NetHeaders.html#tymethod.ipv6_ref\" class=\"fn\">ipv6_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"struct\" href=\"etherparse/struct.Ipv6Header.html\" title=\"struct etherparse::Ipv6Header\">Ipv6Header</a>, &amp;<a class=\"struct\" href=\"etherparse/struct.Ipv6Extensions.html\" title=\"struct etherparse::Ipv6Extensions\">Ipv6Extensions</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns references to the IPv6 header &amp; extensions if the header contains IPv6 values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header_len\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#37-43\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/enum.NetHeaders.html#tymethod.header_len\" class=\"fn\">header_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size when the header &amp; extension headers are serialized</p>\n</div></details></div></details>",0,"etherparse::net::net_headers::IpHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NetHeaders\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#8\">Source</a><a href=\"#impl-PartialEq-for-NetHeaders\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#8\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","etherparse::net::net_headers::IpHeader"],["<section id=\"impl-Eq-for-NetHeaders\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#8\">Source</a><a href=\"#impl-Eq-for-NetHeaders\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a></h3></section>","Eq","etherparse::net::net_headers::IpHeader"],["<section id=\"impl-StructuralPartialEq-for-NetHeaders\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/net_headers.rs.html#8\">Source</a><a href=\"#impl-StructuralPartialEq-for-NetHeaders\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"etherparse/enum.NetHeaders.html\" title=\"enum etherparse::NetHeaders\">NetHeaders</a></h3></section>","StructuralPartialEq","etherparse::net::net_headers::IpHeader"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11628]}