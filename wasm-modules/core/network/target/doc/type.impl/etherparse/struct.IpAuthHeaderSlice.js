(function() {
    var type_impls = Object.fromEntries([["etherparse",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IpAuthHeaderSlice%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#impl-Clone-for-IpAuthHeaderSlice%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","etherparse::net::ip_auth_header_slice::IpAuthenticationHeaderSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IpAuthHeaderSlice%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#impl-Debug-for-IpAuthHeaderSlice%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","etherparse::net::ip_auth_header_slice::IpAuthenticationHeaderSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IpAuthHeaderSlice%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#17-137\">Source</a><a href=\"#impl-IpAuthHeaderSlice%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#19-65\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeaderSlice.html#tymethod.from_slice\" class=\"fn\">from_slice</a>(\n    slice: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;, <a class=\"enum\" href=\"etherparse/err/ip_auth/enum.HeaderSliceError.html\" title=\"enum etherparse::err::ip_auth::HeaderSliceError\">HeaderSliceError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a ip authentication header slice from a slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#78-82\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"etherparse/struct.IpAuthHeaderSlice.html#tymethod.from_slice_unchecked\" class=\"fn\">from_slice_unchecked</a>(slice: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a ip authentication header slice from a slice (assumes slice size &amp; content was validated before).</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This method assumes that the slice was previously validated to contain\na valid authentication header. This means the slice length must at\nleast be at least 8 and <code>(slice[1] + 2)*4</code>. The data that the\nslice points must also be valid (meaning no nullptr or alike allowed).</p>\n<p>If these preconditions are not fulfilled the behavior of this function\nand the methods of the return IpAuthHeaderSlice will be undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#86-88\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeaderSlice.html#tymethod.slice\" class=\"fn\">slice</a>(&amp;self) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the slice containing the authentication header.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_header\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#94-99\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeaderSlice.html#tymethod.next_header\" class=\"fn\">next_header</a>(&amp;self) -&gt; <a class=\"struct\" href=\"etherparse/struct.IpNumber.html\" title=\"struct etherparse::IpNumber\">IpNumber</a></h4></section></summary><div class=\"docblock\"><p>Returns the IP protocol number of the next header or transport layer protocol.</p>\n<p>See <a href=\"etherparse/struct.IpNumber.html\" title=\"struct etherparse::IpNumber\">IpNumber</a> or <a href=\"etherparse/ip_number/index.html\" title=\"mod etherparse::ip_number\">ip_number</a> for a definition of the known values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.spi\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#103-108\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeaderSlice.html#tymethod.spi\" class=\"fn\">spi</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Read the security parameters index from the slice</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sequence_number\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#113-118\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeaderSlice.html#tymethod.sequence_number\" class=\"fn\">sequence_number</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>This unsigned 32-bit field contains a counter value that\nincreases by one for each packet sent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_icv\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#121-123\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeaderSlice.html#tymethod.raw_icv\" class=\"fn\">raw_icv</a>(&amp;self) -&gt; &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;a [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Return a slice with the raw integrity check value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_header\" class=\"method\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#128-136\">Source</a><h4 class=\"code-header\">pub fn <a href=\"etherparse/struct.IpAuthHeaderSlice.html#tymethod.to_header\" class=\"fn\">to_header</a>(&amp;self) -&gt; <a class=\"struct\" href=\"etherparse/struct.IpAuthHeader.html\" title=\"struct etherparse::IpAuthHeader\">IpAuthHeader</a></h4></section></summary><div class=\"docblock\"><p>Decode some of the fields and copy the results to a\nIpv6ExtensionHeader struct together with a slice pointing\nto the non decoded parts.</p>\n</div></details></div></details>",0,"etherparse::net::ip_auth_header_slice::IpAuthenticationHeaderSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-IpAuthHeaderSlice%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#impl-PartialEq-for-IpAuthHeaderSlice%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","etherparse::net::ip_auth_header_slice::IpAuthenticationHeaderSlice"],["<section id=\"impl-Copy-for-IpAuthHeaderSlice%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#impl-Copy-for-IpAuthHeaderSlice%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h3></section>","Copy","etherparse::net::ip_auth_header_slice::IpAuthenticationHeaderSlice"],["<section id=\"impl-Eq-for-IpAuthHeaderSlice%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#impl-Eq-for-IpAuthHeaderSlice%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h3></section>","Eq","etherparse::net::ip_auth_header_slice::IpAuthenticationHeaderSlice"],["<section id=\"impl-StructuralPartialEq-for-IpAuthHeaderSlice%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/etherparse/net/ip_auth_header_slice.rs.html#12\">Source</a><a href=\"#impl-StructuralPartialEq-for-IpAuthHeaderSlice%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"etherparse/struct.IpAuthHeaderSlice.html\" title=\"struct etherparse::IpAuthHeaderSlice\">IpAuthHeaderSlice</a>&lt;'a&gt;</h3></section>","StructuralPartialEq","etherparse::net::ip_auth_header_slice::IpAuthenticationHeaderSlice"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[15696]}